---
# SPDX-FileCopyrightText: Jürgen Mülbert <juergen.muelbert@web.de>
#
# SPDX-License-Identifier: EUPL-1.2
name: CI

on:
  # Trigger ci-workflow at every push. Action will also be visible from Pull Requests to main
  push: # Comment this line to trigger action only on pull-requests (not recommended if you don't pay for GH Actions)
    branches: [main]
  pull_request:
    # The branches below must be a subset of the branches above
    types: [opened, synchronize, reopened]

permissions:
  contents: read

concurrency:
  group: ${{ github.ref }}-${{ github.workflow }}
  cancel-in-progress: true

jobs:
  tests:
    name: >-
      ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]

    steps:
      - name: Set up Homebrew
        id: set-up-homebrew
        uses: Homebrew/actions/setup-homebrew@master

      - name: Cache Homebrew Bundler RubyGems
        id: cache
        uses: actions/cache@v1
        with:
          path: ${{ steps.set-up-homebrew.outputs.gems-path }}
          key: ${{ runner.os }}-rubygems-${{ steps.set-up-homebrew.outputs.gems-hash }}
          restore-keys: ${{ runner.os }}-rubygems-

      - name: Install Homebrew Bundler RubyGems
        if: steps.cache.outputs.cache-hit != 'true'
        run: brew install-bundler-gems

      - run: brew test-bot --only-cleanup-before

      - run: brew test-bot --only-setup

      - run: brew test-bot --only-tap-syntax

      - name: Set up Ruby (Linux)
        if: matrix.os == 'ubuntu-latest'
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: "2.6"
          bundler-cache: true

      - name: Install Homebrew/homebrew-test-bot RubyGems
        if: matrix.os == 'macOS-latest'
        run: bundle install --jobs 4 --retry 3

      - name: Run Homebrew/homebrew-test-bot RSpec tests
        run: bundle exec rspec

      - name: checkout
        uses: actions/checkout@v3.3.0

      - name: Enable Brew on Ubuntu
        if: runner.os == 'Linux'
        run: |
          test -d /home/linuxbrew/.linuxbrew && eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"
          test -r ~/.bash_profile && echo "eval \"\$($(brew --prefix)/bin/brew shellenv)\"" >> ~/.bash_profile
          echo "/home/linuxbrew/.linuxbrew/bin" >> $GITHUB_PATH
          eval "($(brew --prefix)/bin/brew shellenv)"

      - name: Build Docker image and start container
        if: matrix.os == 'ubuntu-latest'
        run: |
          docker build -t brew .devcontainer
          docker create \
            -e GITHUB_ACTIONS -e GITHUB_BASE_REF -e GITHUB_OUTPUT -e GITHUB_REF -e GITHUB_REPOSITORY -e GITHUB_SHA \
            -v "$GITHUB_OUTPUT:$GITHUB_OUTPUT" \
            --name=brewtestbot brew sleep infinity
          docker start brewtestbot
          docker exec brewtestbot \
            sudo setfacl -Rm "d:u:linuxbrew:rwX,u:linuxbrew:rwX" "$RUNNER_TEMP"

      - run: brew test-bot --only-formulae-detect --test-default-formula
        id: formulae-detect

      - name: Run brew test-bot --only-formulae --junit --only-json-tab --skip-dependents --testing-formulae=${{ steps.formulae-detect.outputs.testing_formulae }}
        id: brew-test-bot-formulae
        run: |
          if [ "$RUNNER_OS" = "Linux" ]; then
            docker exec brewtestbot \
              brew test-bot --only-formulae --junit --only-json-tab --skip-dependents --testing-formulae=${{ steps.formulae-detect.outputs.testing_formulae }}
          else
            brew test-bot --only-formulae --junit --only-json-tab --skip-dependents --testing-formulae=${{ steps.formulae-detect.outputs.testing_formulae }}
          fi

      - name: Run brew test-bot --only-formulae-dependents --junit --skipped-or-failed-formulae=${{ steps.brew-test-bot-formulae.outputs.skipped_or_failed_formulae }}
        run: |
          if [ "$RUNNER_OS" = "Linux" ]; then
            docker exec brewtestbot \
            brew test-bot --only-formulae-dependents --junit \
              --testing-formulae=${{ steps.formulae-detect.outputs.testing_formulae }} \
              --skipped-or-failed-formulae=${{ steps.brew-test-bot-formulae.outputs.skipped_or_failed_formulae }}
          else
            brew test-bot --only-formulae-dependents --junit \
              --testing-formulae=${{ steps.formulae-detect.outputs.testing_formulae }} \
              --skipped-or-failed-formulae=${{ steps.brew-test-bot-formulae.outputs.skipped_or_failed_formulae }}
          fi

      - name: Output brew test-bot failures
        if: matrix.os == 'macOS-latest'
        run: |
          cat steps_output.txt
          rm steps_output.txt

      - name: Output brew bottle output
        if: matrix.os == 'macOS-latest'
        run: |
          cat bottle_output.txt
          rm bottle_output.txt

      - name: Run brew test-bot --only-cleanup-after
        run: |
          if [ "$RUNNER_OS" = "Linux" ]; then
            docker exec brewtestbot \
            brew test-bot --only-cleanup-after
          else
            brew test-bot --only-cleanup-after
          fi

      - name: Run brew test-bot --only-setup --dry-run
        run: |
          if [ "$RUNNER_OS" = "Linux" ]; then
            docker exec brewtestbot \
            brew test-bot --only-setup --dry-run
          else
            brew test-bot --only-setup --dry-run
          fi

      - name: Run brew test-bot testbottest --only-formulae --dry-run
        run: |
          if [ "$RUNNER_OS" = "Linux" ]; then
            docker exec brewtestbot \
            brew test-bot testbottest --only-formulae --dry-run
          else
            brew test-bot testbottest --only-formulae --dry-run
          fi

      - name: Cleanup Docker container
        if: matrix.os == 'ubuntu-latest'
        run: |
          docker stop brewtestbot
          docker rm brewtestbot

  fastlaneChecks:
    name: fastlane env reminder
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - uses: actions/checkout@v3.3.0
      - uses: fastlane/github-actions/fastlane-env-reminder@latest
        with:
          repo-token: "${{ secrets.GITHUB_TOKEN}}"

  changeLog:
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
      - name: Build Changelog
        id: github_release
        uses: mikepenz/release-changelog-builder-action@v3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Release
        uses: mikepenz/action-gh-release@v0.2.0-a03
        with:
          body: ${{steps.github_release.outputs.changelog}}
